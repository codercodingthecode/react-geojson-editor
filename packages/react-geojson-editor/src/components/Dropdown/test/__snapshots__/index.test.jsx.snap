// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown has not changed 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    containerStyle={Object {}}
    name="Dropdown"
    style={Object {}}
  >
     
    <div
      className="dropdown-content"
    >
       HI 
    </div>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="toggle-button"
          onClick={[Function]}
          tabIndex="0"
        >
          Dropdown
        </div>
      </div>,
      "className": undefined,
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="toggle-button"
            onClick={[Function]}
            tabIndex="0"
          >
            Dropdown
          </div>,
          undefined,
        ],
        "className": undefined,
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Dropdown",
            "className": "toggle-button",
            "onClick": [Function],
            "tabIndex": "0",
          },
          "ref": null,
          "rendered": "Dropdown",
          "type": "div",
        },
        undefined,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className={undefined}
          style={Object {}}
        >
          <div
            className="toggle-button"
            onClick={[Function]}
            tabIndex="0"
          >
            Dropdown
          </div>
        </div>,
        "className": undefined,
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="toggle-button"
              onClick={[Function]}
              tabIndex="0"
            >
              Dropdown
            </div>,
            undefined,
          ],
          "className": undefined,
          "style": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Dropdown",
              "className": "toggle-button",
              "onClick": [Function],
              "tabIndex": "0",
            },
            "ref": null,
            "rendered": "Dropdown",
            "type": "div",
          },
          undefined,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
